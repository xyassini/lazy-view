"use strict";function _createForOfIteratorHelper(a,b){var c;if("undefined"==typeof Symbol||null==a[Symbol.iterator]){if(Array.isArray(a)||(c=_unsupportedIterableToArray(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0,e=function(){};return{s:e,n:function n(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}},e:function e(a){throw a},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,g=!0,h=!1;return{s:function s(){c=a[Symbol.iterator]()},n:function n(){var a=c.next();return g=a.done,a},e:function e(a){h=!0,f=a},f:function f(){try{g||null==c["return"]||c["return"]()}finally{if(h)throw f}}}}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}(function(){console.log("dom ready");var a=function(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"GET",c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:"";return new Promise(function(d,e){var f=new XMLHttpRequest;f.open(b,a,!0),f.setRequestHeader("Content-Type","application/json"),f.onreadystatechange=function(){f.readyState===XMLHttpRequest.DONE&&(200===f.status?d(JSON.parse(f.responseText)):(console.error("LAZY-VIEW - ERROR",f.statusText),e()))},f.send(c)})};Object.byString=function(b,c){c=c.replace(/\[(\w+)\]/g,".$1"),c=c.replace(/^\./,"");for(var d,e=c.split("."),a=0,f=e.length;a<f;++a)if(d=e[a],d in b)b=b[d];else return;return b};var b=document.querySelector("body"),c=new MutationObserver(function callback(a){var b,c=_createForOfIteratorHelper(a);try{for(c.s();!(b=c.n()).done;){var e=b.value;switch(e.type){case"attributes":return d(e);}}}catch(a){c.e(a)}finally{c.f()}});c.observe(b,{attributes:!0,attributeFilter:["lazy"]});var d=function(a){console.log("handleAttributesChange",a)},e=function(a,b){for(var c,d=0;d<a.children.length;d++)c=a.children.item(d),console.log("node",c),0<c.childElementCount?e(c,b):(console.log("node before",c),c.innerHTML=c.innerText.replace(/{{(.*?)}}/gi,function(a){return a=a.replace(/{/g,"").replace(/}/g,""),console.log("r",Object.byString(b,a)),Object.byString(b,a)}),console.log("node after",c))};(function initialAttributes(){var b=document.querySelectorAll("[lazy]"),c=document.querySelector("[lazy-placeholder]");c.style.display="none";var d=c.cloneNode(!0);b.forEach(function(b){var c=b.appendChild(d);c.style.display="block",console.log("newElement",c);var f=b.attributes.getNamedItem("lazy").value;a(f).then(function(a){console.log("response",a),e(b,a)})})})()})();